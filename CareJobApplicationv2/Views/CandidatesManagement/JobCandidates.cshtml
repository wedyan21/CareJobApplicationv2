@using CareJobApplicationv2.Models

@{
    ViewData["Title"] = "Create longList of Candidates";
    int CJobId = ViewBag.JobId;
}







<div class="text-center">
    <img class="d-block w-100" src="~/images/adv-header-01.jpg" />
</div>
<h3>@ViewData["Title"]</h3>

<div class="row">
    <div class="col-md-12">
        <input type="button" onclick="getLongList()" class="btn btn-warning" value="Create LongList" />
        <a onclick="getLongList()" class="btn btn-warning"><i class="fa-solid fa-list-check"></i> Create LongList</a>
        <a asp-action="Index" class="btn btn-primary"><i class="fa-solid fa-list-check"></i> return to Applicants by position</a>
    </div>
</div>
    <input type="hidden" id="JobId" name="JobId" value="@CJobId" />

<div class="col-lg-12">
    <div class="card  card-border-none bg-light-care mb-3">
        <div class="card-body">
            <div class="row bg-fixed mb-3 pb-3 border ">
                <div class="col-md-2 text-center">
                    <small>
                        <label for="EducationDegree">Education Degree</label>
                    </small>
                        <select Id="EducationDegree" name="EducationDegree" class="multiselect form-select " asp-items="ViewBag.EducationDegree" multiple><option value="">Choose Education Dgree</option></select>
</div>
                <div class="col-md-2 text-center">
                    <small>
                        <label for="EducationDegree">Education Majore</label>
                    </small>
                        <select Id="EducationMajor" name="EducationMajor" class="multiselect form-select " asp-items="ViewBag.EducationMajor" multiple><option value="">Choose Education Major</option></select>
</div>
                <div class="col-md-2 text-center">
                    <small>
                        <label for="EducationDegree">Experience Period</label>
                    </small>
                        <select Id="ExperienceRelated" name="ExperienceRelated" class="multiselect form-select " asp-items="ViewBag.ExperienceRelated" multiple><option value="">Choose Experience Pereiod</option></select>
</div>
                <div class="col-md-2 text-center">
                    <small><label for="EducationDegree">Languages</label></small>
                    <select Id="Languages" name="Languages" class="multiselect form-select " asp-items="ViewBag.Languages" multiple><option value="">Choose Language</option></select>
                </div>
                <div class="col-md-2 text-center">
                    <small>
                        <label for="EducationDegree">Language Skills</label>
                    </small>
                        <select Id="LanguageSkills" name="LanguageSkills" class="multiselect form-select " asp-items="ViewBag.LanguageSkills" multiple><option value="">Choose Language level</option></select>
</div>
                <div class="col-md-2 text-right">

                    <button type="submit" id="Search" class="btn btn-primary mt-3"><i class="fa fa-search"></i></button>
                    <button type="button" id="clearSearch" class="btn btn-primary mt-3"><i class="fa fa-x"></i></button>
                </div>
            </div>

            <table id="JobCandidates" class="table table-responsive table-care">
                <thead class="table-hader-care">
                    <tr>
                        <th>Job</th>
                        <th>UserId</th>
                        <th>Name</th>
                        <th>Gender</th>

                        <th>Degree</th>
                        <th>Major</th>
                        <th>Languages</th>
                        <th>Experiance</th>
                        <th>Form</th>
                        <th></th>

                    </tr>
                </thead>
                @foreach (var item in ViewBag.mysql3)
                {
                    <tr uid="@item.UserId">
                        <td>@item.JobId</td>
                        <td>@item.UserId </td>
                        <td>@item.FullNameEn </td>
                        <td>@item.GenderId</td>
                        @*
                    <td>@string.Join(" , ",@item.EducationDegree ) </td>
                    <td>@string.Join(" , ",@item.EducationMajor ) </td>


                    <td>@item.Major.Count </!td>
                    <td>@item.Degree.Count </td>*@
                        <td>
                            @{
                                if (item.EducationDegree.Count > 0)
                                {
                                    foreach (var i in item.EducationDegree)
                                    {
                                        <div class="col-md-12 ctelement ">
                                            <div class="row">
                                                <div class="col-md-8 ">
                                                    <span class="">@i.Degree</span>
                                                </div>
                                                <div class="col-md-4 ">
                                                    <span class="educationScore-@i.Score">@i.Score</span>
                                                </div>
                                            </div>
                                        </div>

                                    }

                                }

                            }
                        </td>
                        <td>
                            @{
                                if (item.EducationMajor.Count > 0)
                                {
                                    foreach (var i in item.EducationMajor)
                                    {
                                        <div class="col-md-12 ctelement">@i.Major</div>

                                    }

                                }

                            }
                        </td>
                        <td>
                            @{
                                //, @i.ReadingLevel, @i.WritingLevel)
                                if (item.Languages.Count > 0)
                                {
                                    foreach (var i in item.Languages)
                                    {
                                        <div class="col-md-12 ctelement ">
                                            <div class="row">
                                                <div class="col-md-12 ">
                                                    <b>@i.LanguageName</b>
                                                </div>
                                                <div class="col-md-12">
                                                    <span class="Langlevel-@i.SpeakingLevel">(S: @i.SpeakingLevel )</span>
                                                    <span class="Langlevel-@i.ReadingLevel">( R: @i.ReadingLevel )</span>
                                                    <span class="Langlevel-@i.WritingLevel">( W: @i.WritingLevel)</span>
                                                </div>
                                            </div>
                                        </div>

                                    }

                                }

                            }
                        </td>
                        <td>

                            @{
                                //, @i.ReadingLevel, @i.WritingLevel)
                                if (item.ExperienceList.Count > 0)
                                {
                                    TimeSpan? Difference;
                                    int myPeriod = 0;
                                    string yperiod = " - ";
                                    string SC = "";
                                    foreach (var ex in item.ExperienceList)
                                    {
                                        Difference = null;
                                        if (ex.EndDate != null && ex.StartDate != null)
                                        {
                                            Difference = (ex.EndDate - ex.StartDate);
                                            if (Difference.Value.Days > 0)
                                            {
                                                if (Difference.Value.Days > 365)
                                                {

                                                    myPeriod = Difference.Value.Days / 365;
                                                    yperiod = myPeriod + " Years";

                                                    SC = (myPeriod > 3) ? "exp-3" : "exp-2";
                                                }
                                                else
                                                {
                                                    myPeriod = Difference.Value.Days;
                                                    yperiod = myPeriod + " Days";

                                                    SC = "exp-1";
                                                }
                                            }



                                        }


                                        <div class="col-md-12 ctelement ">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <b>@ex.Position</b>
                                                </div>
                                                <div class="col-md-12">
                                                    <span class="@SC p-1">@yperiod </span>
                                                </div>
                                            </div>
                                        </div>

                                    }

                                }

                            }
                        </td>
                        <td>

                            @item.JobFormData
                        </td>
                        <td class="text-center selectToList">
                            <!--input type="checkbox" /-->

                            @{ var chck = "";
                                if (item.IsLongList == true)
                                {
                                    chck = "checked";

                                }


                            }
                            <label class="switch">
                                <input type="checkbox" @chck>
                                <span class="slider"></span>
                            </label>
                        </td>
                    </tr>



                }
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>



@section Scripts
{

    
    <link rel="stylesheet" type="text/css" href="~/lib/DataTables/datatables.min.css" />

    <script type="text/javascript" src="~/lib/DataTables/datatables.min.js"></script>
    <link href="~/lib/bootstrap-multiselect/css/bootstrap-multiselect.css" rel="stylesheet" />
    <script src="~/lib/bootstrap-multiselect/js/bootstrap-multiselect.js"></script>




    <script type="text/javascript">
       // var Popup, dataTable;
        var dataTable;

     function getLongList() {
         alert("Long");
         var LongListArray = [];
         $('#JobCandidates tr.Longtlisted-item').each(function (index, tr) {

             console.log($(this).find('td.selectToList'));
             console.log($(this).find('td.selectToList').find('input:checkbox').attr('Checked'));
             console.log($(this));
             if ($(this).attr('uid') != undefined) {
                 LongListArray.push($(this).attr('uid'));
             }



         });
         console.log(LongListArray)
         console.log(JSON.stringify(LongListArray));
         
        // AddLongList(parseInt(@CJobId), LongListArray)
         $.ajax({
             type: "POST",
             url: "/CandidatesManagement/CreateLongList/",
             data: {
                 JobId: parseInt(@CJobId),
                 LongList: JSON.stringify(LongListArray),


             },
             beforeSend: function () {
                 $("#loading-image").show();
             },
             success: function (result) {
                 console.log(result);
                 $("#JobCandidates").DataTable().ajax.reload();
                 
             },
             error: function (req, status, error) {
                 console.log(status);
                 console.log(error);
                 
             }
         })
     }

     function AddLongList(CJobId, LongListArray) {
         if (CJobId != 0 && LongListArray != null) {
             console.log("CJobId: " + CJobId);
             console.log("LongListArray: " + LongListArray);
         }
     }


        $(document).ready(function () {
           

            $('.multiselect').multiselect({
                templates: {
                    button: '<button type="button" class="multiselect dropdown-toggle btn btn-outline-primary" data-bs-toggle="dropdown" aria-expanded="false"><span class="multiselect-selected-text"></span></button>',
                },
                buttonWidth: '100%',
                includeSelectAllOption: true,
                enableFiltering: true,
                //nonSelectedText: ' Select  ',
                inheritClass: true,

            });
            
            $('#EducationDegree').on('change', function (element, checked) {

                    var EducationLevel = $('#EducationDegree option:selected');

                    var Edu_selected = [];
                    $(EducationLevel).each(function (index, EduLevel) {
                        console.log($(this).text());
                        Edu_selected.push([$(this).val()]);
                        //Edu_selected.push([$(this).text()]);
                    });

                    var Edu_regex = Edu_selected.join("|");
                    // console.log('=======');
                    // console.log(Edu_regex);
                    //dataTable.column(-1).search(Edu_regex, true, false).draw();
                    console.log(Edu_regex);
                    console.log(dataTable.column(2));
                    dataTable.column(4).search(Edu_regex, true, false).draw();
                }
            );
            

            $('#EducationDegree').on('change', function (element, checked) {

                    var EducationLevel = $('#EducationDegree option:selected');
                    var Edu_selected = [];
                    $(EducationLevel).each(function (index, EduLevel) {
                        Edu_selected.push([$(this).val()]);
                    });
                    var Edu_regex = Edu_selected.join("|");
                    dataTable.column(4).search(Edu_regex, true, false).draw();
                }
            );
            $('#EducationMajor').on('change', function (element, checked) {

                var EducationMajor = $('#EducationMajor option:selected');
                var Edu_selectedMajor = [];
                $(EducationMajor).each(function (index, EduLevel) {
                    Edu_selectedMajor.push([$(this).val()]);
                });
                var Edu_regex = Edu_selectedMajor.join("|");
                dataTable.column(5).search(Edu_regex, true, false).draw();
            }
            );

            $('#Languages').on('change', function (element, checked) {

                var EducationMajor = $('#Languages option:selected');
                var Edu_selectedMajor = [];
                $(EducationMajor).each(function (index, EduLevel) {
                    Edu_selectedMajor.push([$(this).val()]);
                    console.log(Edu_selectedMajor.push([$(this).val()]));
                });
                var Edu_regex = Edu_selectedMajor.join("|");
                dataTable.column(6).search(Edu_regex, true, false).draw();
            }
            );
            $('#LanguageSkills').on('change', function (element, checked) {

                var EducationMajor = $('#LanguageSkills option:selected');
                var Edu_selectedMajor = [];
                $(EducationMajor).each(function (index, EduLevel) {
                    Edu_selectedMajor.push([$(this).val()]);
                    console.log(Edu_selectedMajor.push([$(this).val()]));
                });
                var Edu_regex = Edu_selectedMajor.join("|");
                dataTable.column(6).search(Edu_regex, true, false).draw();
            }
            );

         $('#JobCandidates tr').each(function (index, tr) {

             $(this).closest('tr').find(':checkbox').prop('checked', this.checked);
             if ($(this).closest('tr').find(':checkbox').prop('checked') == true) {
                 console.log("vvvvvvvvvvvvvvv");
                 console.log(this);
                 console.log("vvvvvvvvvvvvvvv");

                 $(this).closest('tr').addClass('Longtlisted-item');
             } else {
                 $(this).closest('tr').removeClass('Longtlisted-item');
             }
             /*
             if ($(this).closest('tr').hasClass('Longtlisted-item')) {
                 $(this).closest('tr').removeClass('Longtlisted-item');
             } else {
                 $(this).closest('tr').addClass('Longtlisted-item');
             }
             */

         });

         $(':checkbox').on('change', function () {

              $(this).closest('tr').find(':checkbox').prop('checked', this.checked);
             if ($(this).closest('tr').hasClass('Longtlisted-item')) {
                 $(this).closest('tr').removeClass('Longtlisted-item');
              } else {
                 $(this).closest('tr').addClass('Longtlisted-item');
          }


                                });

                               //$('#JobCandidates').dataTable();
                                $('#JobCandidates').DataTable({

                                    "columnDefs": [
                                                        {
                                                            "targets": [0,1],
                                                            "visible": false,
                                                            "searchable": false
                                                        },
                                                        {
                                                            "target":[-2],
                                                           "render": function (data, type, row) {
                                                                    console.log($.parseJSON(row[8]));
                                                                    var mydata = $.parseJSON(row[8]);
                                                                    console.log(mydata.length);
                                                                    var CFA = "";
                                                                    if(mydata.length>0){
                                                                        $.each(mydata, function(key,value) {
                                                                           CFA = CFA + '<div class="col-md-12 ctelement "><b>'+value.label +':</b> '+value.userData+'</div>';
                                                                          console.log(value.name +": "+value.userData);
                                                                        });

                                                                    }
                                                                    console.log(" ============================================ ");
                                                                    console.log(data);

                                                                return CFA;
                                                            }
                                                        }
                                                    ],
                                });

            dataTable = $('#JobCandidates').DataTable();
                            } );
    </script>

}